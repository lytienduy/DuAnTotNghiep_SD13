import React, { useState } from "react";
import {
  Box,
  Typography,
  Paper,
  Button,
  TextField,
  Grid,
  Tooltip as MuiTooltip,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TablePagination,
  TableRow,
} from "@mui/material";

import {
  PieChart,
  Pie,
  Cell,
  BarChart,
  Bar,
  LineChart,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
  Legend,
} from "recharts";
import { SaveAlt } from "@mui/icons-material";
import FileDownloadIcon from "@mui/icons-material/FileDownload";

const revenueData = [
  {
    label: "Doanh thu h√¥m nay",
    value: "19,777,500 VND",
    productsSold: "150 s·∫£n ph·∫©m",
    successfulOrders: "120 ƒë∆°n h√†ng",
  },
  {
    label: "Doanh thu th√°ng n√†y",
    value: "84,107,493 VND",
    productsSold: "3,200 s·∫£n ph·∫©m",
    successfulOrders: "2,800 ƒë∆°n h√†ng",
  },
  {
    label: "Doanh thu nƒÉm nay",
    value: "1,024,500,000 VND",
    productsSold: "40,500 s·∫£n ph·∫©m",
    successfulOrders: "38,000 ƒë∆°n h√†ng",
  },
];

const monthlyRevenue = [
  { month: "Th√°ng 1", revenue: 50000000 },
  { month: "Th√°ng 2", revenue: 60000000 },
  { month: "Th√°ng 3", revenue: 75000000 },
  { month: "Th√°ng 4", revenue: 90000000 },
  { month: "Th√°ng 5", revenue: 100000000 },
  { month: "Th√°ng 6", revenue: 95000000 },
  { month: "Th√°ng 7", revenue: 105000000 },
  { month: "Th√°ng 8", revenue: 110000000 },
  { month: "Th√°ng 9", revenue: 120000000 },
  { month: "Th√°ng 10", revenue: 130000000 },
  { month: "Th√°ng 11", revenue: 140000000 },
  { month: "Th√°ng 12", revenue: 150000000 },
];
const topProducts = [
  { name: "Qu·∫ßn √Çu Nam C√¥ng S·ªü", sold: 500 },
  { name: "Qu·∫ßn √Çu Slim Fit", sold: 450 },
  { name: "Qu·∫ßn √Çu H√†n Qu·ªëc", sold: 400 },
  { name: "Qu·∫ßn √Çu D√°ng Su√¥ng", sold: 380 },
  { name: "Qu·∫ßn √Çu X√°m Ghi", sold: 350 },
];

const lowStockProducts = [
  { name: "Qu·∫ßn √Çu Nam C√¥ng S·ªü", quantity: 5 },
  { name: "Qu·∫ßn √Çu Slim Fit", quantity: 8 },
  { name: "Qu·∫ßn √Çu H√†n Qu·ªëc", quantity: 10 },
  { name: "Qu·∫ßn √Çu D√°ng Su√¥ng", quantity: 12 },
  { name: "Qu·∫ßn √Çu X√°m Ghi", quantity: 15 },
];

const stockProducts = [
  { name: "Qu·∫ßn √Çu Nam C√¥ng S·ªü", quantity: 120 },
  { name: "Qu·∫ßn √Çu Slim Fit", quantity: 100 },
  { name: "Qu·∫ßn √Çu H√†n Qu·ªëc", quantity: 90 },
  { name: "Qu·∫ßn √Çu D√°ng Su√¥ng", quantity: 85 },
  { name: "Qu·∫ßn √Çu X√°m Ghi", quantity: 80 },
];

const orderStatusData = [
  { name: "ƒê√£ giao", value: 120 },
  { name: "ƒêang giao", value: 60 },
  { name: "Ch·ªù x·ª≠ l√Ω", value: 40 },
  { name: "H·ªßy b·ªè", value: 10 },
];

const COLORS = ["#4CAF50", "#FF9800", "#2196F3", "#F44336"];

const RevenueCard = ({ label, value, productsSold, successfulOrders }) => (
  <Paper
    elevation={3}
    sx={{
      p: 2,
      borderRadius: 2,
      minWidth: 340,
      textAlign: "center",
      backgroundColor: "white",
    }}
  >
    <Typography variant="h6" fontWeight="bold" color="primary">
      {label}
    </Typography>
    <Typography variant="h5" fontWeight="bold" color="#0D47A1" mt={1}>
      {value}
    </Typography>
    <Typography variant="body1" mt={1}>
      {productsSold}
    </Typography>
    <Typography variant="body1">{successfulOrders}</Typography>
  </Paper>
);

const ThongKe = () => {
  const [chartType, setChartType] = useState("bar");
  const [fromDate, setFromDate] = useState("");
  const [toDate, setToDate] = useState("");
  const [filteredData, setFilteredData] = useState(monthlyRevenue);
  const [selected, setSelected] = useState("T√ôY CH·ªàNH", "NG√ÄY");

  const handleExport = () => {
    console.log("Xu·∫•t Excel...");
  };

  const handleSearch = () => {
    const newData = monthlyRevenue.filter(
      (data) => data.month >= fromDate && data.month <= toDate
    );
    setFilteredData(newData.length > 0 ? newData : monthlyRevenue);
  };

  const [showCustomRevenue, setShowCustomRevenue] = useState(false);

  const handleSelect = (item) => {
    setSelected(item);
    setShowCustomRevenue(item === "T√ôY CH·ªàNH");
  };

  return (
    <Box sx={{ p: 2 }}>
      <Typography variant="h4" fontWeight="bold" mb={3}>
        Th·ªëng K√™
      </Typography>
      <Box
        sx={{
          display: "flex",
          justifyContent: "center",
          gap: "40px",
          flexWrap: "wrap",
        }}
      >
        {revenueData.map((item, index) => (
          <RevenueCard key={index} {...item} />
        ))}
      </Box>

      <Box>
        {/* Hi·ªÉn th·ªã √¥ doanh thu t√πy ch·ªânh */}
        {showCustomRevenue && (
          <Box
            sx={{
              mt: 2,
              minWidth: 900,
              p: 2,
              backgroundColor: "white",
              borderRadius: 2,
              textAlign: "center",
              color: "black",
              fontWeight: "bold",
              boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.2)",
              border: "1px solid #ddd",
            }}
          >
            <Typography variant="h6" fontWeight="bold" color="#1976D2" mt={1}>
              Doanh Thu T√πy ch·ªânh
            </Typography>
            <Typography
              variant="h5"
              sx={{ fontWeight: "bold", color: "#0D47A1" ,mt:1}}
            >
              19,267,000 VND
            </Typography>
            <Box
              sx={{ display: "flex", justifyContent: "space-around", mt: 2 }}
            >
              <Box>
                <Typography variant="body2">S·∫£n ph·∫©m</Typography>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  25
                </Typography>
              </Box>

              <Box>
                <Typography variant="body2">ƒê∆°n th√†nh c√¥ng</Typography>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  6
                </Typography>
              </Box>

              <Box>
                <Typography variant="body2">ƒê∆°n h·ªßy</Typography>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  1
                </Typography>
              </Box>

              <Box>
                <Typography variant="body2">ƒê∆°n tr·∫£</Typography>
                <Typography variant="h6" sx={{ fontWeight: "bold" }}>
                  2
                </Typography>
              </Box>
            </Box>
          </Box>
        )}
      </Box>

      <Box
        display="flex"
        alignItems="center"
        justifyContent="flex-end"
        gap={1}
        mt={4}
        mb={0}
      >
        {["NG√ÄY", "TU·∫¶N", "TH√ÅNG", "NƒÇM", "T√ôY CH·ªàNH"].map((item) => (
          <Button
            key={item}
            variant={selected === item ? "contained" : "outlined"}
            onClick={() => handleSelect(item)}
            sx={{
              backgroundColor: selected === item ? "#1976D2" : "white",
              color: selected === item ? "white" : "#1976D2",
              borderColor: "#1976D2",
              borderRadius: 1,
              px: 2.5,
              fontWeight: "bold",
              "&:hover": {
                backgroundColor: selected === item ? "#1565C0" : "#E3F2FD",
              },
            }}
          >
            {item}
          </Button>
        ))}

        {/* N√∫t xu·∫•t Excel */}
        <Button
          variant="outlined" // üëà Chuy·ªÉn th√†nh "outlined" ƒë·ªÉ c√≥ vi·ªÅn
          color="success"
          onClick={handleExport}
          sx={{
            borderRadius: 1,
            px: 3,
            fontWeight: "bold",
            borderColor: "#2E7D32", // üëà Vi·ªÅn xanh l√°
            color: "#2E7D32", // üëà Ch·ªØ xanh l√°
            backgroundColor: "white", // üëà N·ªÅn tr·∫Øng
            display: "flex",
            alignItems: "center", // üëà CƒÉn gi·ªØa icon v√† ch·ªØ
            gap: 1, // üëà T·∫°o kho·∫£ng c√°ch gi·ªØa icon v√† ch·ªØ
            "&:hover": {
              backgroundColor: "#E8F5E9", // üëà M√†u n·ªÅn nh·∫°t khi hover
              borderColor: "#1B5E20",
            },
          }}
        >
          <FileDownloadIcon fontSize="small" /> {/* üëà Th√™m icon */}
          Xu·∫•t Excel
        </Button>
      </Box>

      <Box
        component={Paper}
        elevation={3}
        sx={{
          backgroundColor: "white",
          height: 530,
          borderRadius: 2,
          marginTop: "0px",
        }}
      >
        <Box sx={{ mt: 0, height: 400, width: "100%" }}>
          <Box sx={{ mt: 2, mb: 3, pl: 3 }}>
            <Typography variant="h5" fontWeight="bold" sx={{ pt: 1 }}>
              Bi·ªÉu ƒê·ªì Th·ªëng K√™
            </Typography>
          </Box>
          <Grid container spacing={2} alignItems="center" sx={{ mt: 2 }}>
            <Box
              sx={{
                mt: 2,
                display: "flex",
                justifyContent: "flex-start",
                ml: 14,
              }}
            >
              <MuiTooltip
                title={chartType === "bar" ? "Bi·ªÉu ƒë·ªì c·ªôt" : "Bi·ªÉu ƒë·ªì ƒë∆∞·ªùng"}
              >
                <Button
                  variant="outlined"
                  size="small"
                  onClick={() =>
                    setChartType(chartType === "bar" ? "line" : "bar")
                  }
                  sx={{
                    ml: 2,
                    borderColor: "#0D47A1",
                    color: "#0D47A1",
                    backgroundColor: "white",
                    borderRadius: "8px",
                    textTransform: "none",
                    fontWeight: "bold",
                    fontSize: "12px",
                    padding: "4px 8px",
                    minWidth: "auto",
                    "&:hover": {
                      backgroundColor: "#E3F2FD",
                      borderColor: "#0D47A1",
                    },
                  }}
                >
                  {chartType === "bar" ? "üìä" : "üìà"}
                </Button>
              </MuiTooltip>
            </Box>

            <Grid item sx={{ ml: 73 }}>
              <TextField
                label="T·ª´ ng√†y"
                type="date"
                InputLabelProps={{ shrink: true }}
                value={fromDate}
                onChange={(e) => setFromDate(e.target.value)}
                sx={{
                  "& .MuiInputBase-root": { height: "35px", fontSize: "14px" },
                  "& .MuiInputLabel-root": { fontSize: "12px" },
                }}
              />
            </Grid>
            <Grid item>
              <TextField
                label="ƒê·∫øn ng√†y"
                type="date"
                InputLabelProps={{ shrink: true }}
                value={toDate}
                onChange={(e) => setToDate(e.target.value)}
                sx={{
                  "& .MuiInputBase-root": { height: "35px", fontSize: "14px" },
                  "& .MuiInputLabel-root": { fontSize: "12px" },
                }}
              />
            </Grid>
            <Grid item>
              <Button
                variant="contained"
                onClick={handleSearch}
                sx={{ height: "35px" }}
              >
                T√¨m ki·∫øm
              </Button>
            </Grid>
          </Grid>
          <ResponsiveContainer width="100%" height="100%">
            {chartType === "bar" ? (
              <BarChart
              data={filteredData}
              margin={{ top: 20, right: 50, left: 50, bottom: 5 }}
            >
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="month" />
              <YAxis />
              <Tooltip 
                content={({ payload }) => {
                  if (!payload || payload.length === 0) return null;
                  return (
                    <div style={{ background: "#fff", padding: 10, border: "1px solid #ccc" }}>
                      <p>{payload[0].payload.month}</p>
                      <p>Doanh thu: {payload[0].value.toLocaleString()} VND</p>
                    </div>
                  );
                }} 
              />
              <Legend />
              <Bar dataKey="revenue" fill="#0D47A1" barSize={40} />
            </BarChart>            
            ) : (
              <LineChart
                data={filteredData}
                margin={{ top: 20, right: 50, left: 50, bottom: 5 }}
              >
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="month" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Line
                  type="monotone"
                  dataKey="revenue"
                  stroke="#0D47A1"
                  strokeWidth={2}
                />
              </LineChart>
            )}
          </ResponsiveContainer>
        </Box>
      </Box>
      <Box sx={{ mt: 4 }}>
        <Grid container spacing={2}>
          {/* H√†ng 1: Top 5 s·∫£n ph·∫©m b√°n ch·∫°y & Tr·∫°ng th√°i ƒë∆°n h√†ng */}
          <Grid container item spacing={2} xs={12}>
            <Grid item xs={12} md={6}>
              <TableContainer component={Paper}>
                <Typography variant="h6" fontWeight="bold" p={2}>
                  Top S·∫£n Ph·∫©m B√°n Ch·∫°y Trong Th√°ng
                </Typography>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell>#</TableCell>
                      <TableCell>S·∫£n ph·∫©m</TableCell>
                      <TableCell align="right">ƒê√£ b√°n</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {topProducts.map((row, index) => (
                      <TableRow key={index}>
                        <TableCell>{index + 1}</TableCell>
                        <TableCell>{row.name}</TableCell>
                        <TableCell align="right">{row.sold}</TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </Grid>

            <Grid item xs={12} md={6}>
              <Paper sx={{ p: 2 }}>
                <Typography variant="h6" fontWeight="bold" mb={2}>
                  Tr·∫°ng Th√°i ƒê∆°n H√†ng
                </Typography>
                <ResponsiveContainer width="100%" height={300}>
                  <PieChart>
                    <Pie
                      data={orderStatusData}
                      cx="50%"
                      cy="50%"
                      outerRadius={100}
                      fill="#8884d8"
                      dataKey="value"
                      label
                    >
                      {orderStatusData.map((entry, index) => (
                        <Cell
                          key={`cell-${index}`}
                          fill={COLORS[index % COLORS.length]}
                        />
                      ))}
                    </Pie>
                    <Tooltip />
                    <Legend />
                  </PieChart>
                </ResponsiveContainer>
              </Paper>
            </Grid>
          </Grid>

          {/* H√†ng 2: 5 s·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng & 5 s·∫£n ph·∫©m t·ªìn kho */}
          <Grid container item spacing={2} xs={12}>
            <Grid item xs={12} md={6}>
              <TableContainer component={Paper}>
                <Typography variant="h6" fontWeight="bold" p={2}>
                  Top S·∫£n Ph·∫©m S·∫Øp H·∫øt H√†ng Trong Th√°ng
                </Typography>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell>#</TableCell>
                      <TableCell>S·∫£n ph·∫©m</TableCell>
                      <TableCell align="right">S·ªë l∆∞·ª£ng</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {lowStockProducts.map((row, index) => (
                      <TableRow key={index}>
                        <TableCell>{index + 1}</TableCell>
                        <TableCell>{row.name}</TableCell>
                        <TableCell align="right">{row.quantity}</TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </Grid>

            <Grid item xs={12} md={6}>
              <TableContainer component={Paper}>
                <Typography variant="h6" fontWeight="bold" p={2}>
                  Top S·∫£n Ph·∫©m T·ªìn Kho Trong Th√°ng
                </Typography>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell>#</TableCell>
                      <TableCell>S·∫£n ph·∫©m</TableCell>
                      <TableCell align="right">S·ªë l∆∞·ª£ng</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {stockProducts.map((row, index) => (
                      <TableRow key={index}>
                        <TableCell>{index + 1}</TableCell>
                        <TableCell>{row.name}</TableCell>
                        <TableCell align="right">{row.quantity}</TableCell>
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
            </Grid>
          </Grid>
        </Grid>
      </Box>
    </Box>
  );
};

export default ThongKe;
