package com.example.shopdragonbee.controller;

import com.example.shopdragonbee.service.ChatbotService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.util.Map;
import java.util.Random;

@RestController
@RequestMapping("/api/chatbot")
public class ChatbotController {
    @Autowired
    private ChatbotService chatbotService;

    @PostMapping
    public ResponseEntity<String> chat(@RequestBody Map<String, String> request) throws IOException {
        String userMessage = request.get("message");

        // Ki·ªÉm tra n·∫øu l√† m·ªôt y√™u c·∫ßu li√™n quan ƒë·∫øn c√°c s·∫£n ph·∫©m kh√°c ngo√†i qu·∫ßn √¢u
        if (isOtherProductRequest(userMessage)) {
            String apologyMessage = getApologyMessage();
            return ResponseEntity.ok(apologyMessage);
        }

        // Ki·ªÉm tra n·∫øu l√† l·ªùi c·∫£m ∆°n
        if (isThankYouMessage(userMessage)) {
            String thankReply = getRandomThankReply();
            return ResponseEntity.ok(thankReply);
        }

        // X·ª≠ l√Ω c√°c message th√¥ng th∆∞·ªùng kh√°c
        String botResponse = chatbotService.chatWithBot(userMessage);
        return ResponseEntity.ok(botResponse);
    }

    private boolean isThankYouMessage(String message) {
        if (message == null) return false;
        String lower = message.toLowerCase();
        return lower.contains("c·∫£m ∆°n") || lower.contains("thank") || lower.contains("thanks");
    }

    private boolean isOtherProductRequest(String message) {
        if (message == null) return false;
        String lower = message.toLowerCase();
        // Danh s√°ch c√°c s·∫£n ph·∫©m kh√¥ng ph·∫£i qu·∫ßn √¢u
        String[] nonPantsProducts = {"t√∫i s√°ch", "√°o", "v√°y", "s∆° mi", "k√≠nh", "gi√†y"};
        for (String product : nonPantsProducts) {
            if (lower.contains(product)) {
                return true;
            }
        }
        return false;
    }

    private String getApologyMessage() {
        return "Xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y, hi·ªán t·∫°i DragonBee ch·ªâ kinh doanh v·ªÅ qu·∫ßn √¢u üëñ. " +
                "DragonBee xin ti·∫øp nh·∫≠n mong mu·ªën c·ªßa b·∫°n, r·∫•t c√≥ th·ªÉ trong t∆∞∆°ng DragonBee t√¥i s·∫Ω kinh doanh v·ªÅ s·∫£n ph·∫©m b·∫°n mong mu·ªën üçÄ. " +
                "R·∫•t mong b·∫°n s·∫Ω ti·∫øp t·ª•c ·ªßng h·ªô ch√∫ng m√¨nh üêù.";
    }

    private String getRandomThankReply() {
        String[] thankReplies = {
                "Dragonbee r·∫•t vui v√¨ ƒë√£ gi√∫p ƒë∆∞·ª£c b·∫°n ‚ù§Ô∏è",
                "C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng Dragonbee üêù",
                "Lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n b·∫•t c·ª© l√∫c n√†o üí¨",
                "R·∫•t h√¢n h·∫°nh ƒë∆∞·ª£c ƒë·ªìng h√†nh c√πng b·∫°n ‚ú®"
        };
        return thankReplies[new Random().nextInt(thankReplies.length)];
    }
}
